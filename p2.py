#! /usr/bin/env python
# -*- coding: utf-8 -*-

"""
Project Euler, problem 2: Even fibonacci numbers.
http://projecteuler.net/problem=2

Each new term in the Fibonacci sequence is generated by adding the previous two
terms. By starting with 1 and 2, the first 10 terms will be:

    1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not exceed
four million, find the sum of the even-valued terms.
"""

def fibonacci(num):
    """
    Fibonacci function.
    """
    if num == 1:
        return 1
    if num == 2:
        return 2
    else:
        return fibonacci(num-1) +fibonacci(num-2)

if __name__ == "__main__":


    # The even-valued terms in the fibonacci sequence are separated by three
    # positions, starting from the second one

    #     i = 1, fibonacci(i) = 1, odd
    #     i = 2, fibonacci(i) = 2, even
    #     i = 3, fibonacci(i) = 5, odd
    #     ...
    #     i = 5, fibonacci(i) = 8, even
    #     ...
    #     i = 8, fibonacci(i) = 34,even

    # Also, fibonacci(32) is the largest number below 4 million in the
    # fibonacci sequence


    LIMIT = 4000000

    EVEN = [fibonacci(i) for i in xrange(2, 33, 3) if fibonacci(i) < LIMIT]
    print ("The sum of the even fibonacci terms below %d is %d "
           ) % (LIMIT, sum(EVEN))
