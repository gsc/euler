package main

import (
	"fmt"
	"time"
)

func trace() time.Time {
	return time.Now()
}

func un(startTime time.Time) {
	endTime := time.Now()
	fmt.Println("ElapsedTime in seconds:", endTime.Sub(startTime))
}

func main() {

	defer un(trace())

	maxLength := 0

	var sequenceLength int
	var nextNumber int
	var maxFactor int

	for num := 1; num <= 1000000; num++ {
		sequenceLength = 0
		nextNumber = num

		for nextNumber > 1 {
			if nextNumber%2 == 0 {
				nextNumber = nextNumber / 2
			} else {
				nextNumber = 3*nextNumber + 1
			}

			sequenceLength += 1
		}

		if sequenceLength > maxLength {
			maxLength = sequenceLength
			maxFactor = num
		}
	}

	fmt.Print("The longest collatz sequence below 1 million is generated by ", maxFactor)
	fmt.Printf(" (Length: %d)\n", maxLength)
}
