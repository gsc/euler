#Project Euler, problem 2: Even fibonacci numbers. (http://projecteuler.net/problem=2).

# Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:
# 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
# By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.

#Fibonacci function. 
def fibonacci(n):
    if n == 1:
        return 1
    if n == 2:
        return 2
    else:
        return fibonacci(n-1) +fibonacci(n-2)

i = 2
acum = 0
# Notes: the even-valued terms in the fibonacci sequence are separated by three positions, starting from the second one (i=2,5,8, fibonacci(i) = {2,8,34...}).
while True:
    term = fibonacci(i)
    if term > 4000000:
        #print('break at :'+str(i))
        break
    else:
        #print('sum '+str(term)+' i:'+str(i))
        acum +=term        
        i += 3


